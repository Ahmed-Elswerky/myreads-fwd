{"version":3,"sources":["logo.svg","BookAPI.js","book.js","App.js","reportWebVitals.js","bookSearch.js","SearchPage.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","Book","props","useState","book","setBook","useEffect","bookId","undefined","id","res1","className","style","width","height","backgroundImage","imageLinks","smallThumbnail","value","shelf","onChange","v","target","length","method","body","JSON","stringify","update","title","authors","map","e","App","showSearchPage","searchString","state","setState1","setState","c","filter","Date","now","to","border","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","BookSearch","allBooks","setAllBooks","setBooks","setUpdate","query","str","find","SearchPage","onClick","type","placeholder","ReactDOM","render","path","element","exact","document","getElementById"],"mappings":"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","file":"static/js/main.96c03b40.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Content-Type': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)","import React, { useEffect,useState } from 'react'\r\nimport {get,update} from './BookAPI'\r\n\r\n function Book(props){\r\n    // console.log(await get(props.id))\r\n    const [book,setBook] = useState({})\r\n    useEffect(()=>{\r\n        props.book!=undefined?setBook(props.book):get(props.id).then(res=>{\r\n             res.then(res1 => {\r\n                setBook(res1)\r\n            })\r\n        })\r\n    },[])\r\n    return(\r\n         <li key={book?.id}>\r\n          <div className=\"book\">\r\n            <div className=\"book-top\">\r\n              <div\r\n                className=\"book-cover\"\r\n                style={{\r\n                  width: 128,\r\n                  height: 193,\r\n                  backgroundImage: `url(${book?.imageLinks?.smallThumbnail})`,\r\n                }}></div>\r\n              <div className=\"book-shelf-changer\">\r\n                <select value={book.shelf} onChange={v=>{v.target?.value?.length>0&&update({id:book.id},v.target.value).then(()=>props.update())}}>\r\n                  <option value=\"\" >\r\n                    Move to...\r\n                  </option>\r\n                  <option value=\"currentlyReading\">Currently Reading</option>\r\n                  <option value=\"wantToRead\">Want to Read</option>\r\n                  <option value=\"read\">Read</option>\r\n                  <option value=\"none\">None</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"book-title\">{book?.title}</div>\r\n            <div className=\"book-authors\">{book?.authors?.length > 0 && book?.authors.map(e=>e+' . ')}</div>\r\n          </div>\r\n        </li>\r\n    )\r\n}\r\nexport default Book","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\nimport Book from \"./book.js\";\nimport { getAll } from \"./BookAPI\";\n\nfunction App() {\n  const [state, setState1] = useState({\n    showSearchPage: false,\n    searchString: \"\",\n    books: [],\n    update: 1,\n  });\n  const setState = (e) => {\n    setState1((c) => ({ ...c, ...e }));\n  };\n  useEffect(() => {\n    getAll().then((books) => {\n      setState({ books: [] });\n      setState({ books });\n    });\n  }, [state.update]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {state.books\n                    .filter((e) => e.shelf == \"currentlyReading\")\n                    .map((book) => (\n                      <Book book={book} update={() => setState({ update: Date.now() })} />\n                    ))}\n                </ol>\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {state.books\n                    .filter((e) => e.shelf == \"wantToRead\")\n                    .map((book) => (\n                      <Book book={book} update={() => setState({ update: Date.now() })} />\n                    ))}\n                </ol>\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {state.books\n                    .filter((e) => e.shelf == \"read\")\n                    .map((book) => (\n                      <Book book={book} update={() => setState({ update: Date.now() })} />\n                    ))}\n                </ol>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"open-search\">\n          {/* <button onClick={() => setState({ showSearchPage: true })}>Add a book</button> */}\n          <Link to=\"/Search\">\n            <button style={{border:'0'}}>Add a book</button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from \"react\";\r\nimport { search, getAll } from \"./BookAPI\";\r\nimport Book from \"./book\";\r\n\r\nfunction BookSearch(props) {\r\n  const [allBooks, setAllBooks] = useState([]);\r\n  const [books, setBooks] = useState([]);\r\n  const [update, setUpdate] = useState(1);\r\n  useEffect(() => {\r\n    getAll().then((allBooks) => {\r\n      setAllBooks([]);\r\n      setAllBooks(allBooks);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    props.str.length == 0\r\n      ? setBooks([])\r\n      : search(props.str).then((books) => {\r\n          if (books?.length > 0) setBooks(books);\r\n          else setBooks([]);\r\n        });\r\n  }, [props.str]);\r\n  return (\r\n    <>\r\n      {books?.map((book) => (\r\n        <Book book={allBooks.find((e) => e.id == book.id) || book} update={() => setUpdate(Date.now())} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default BookSearch;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookSearch from \"./bookSearch.js\";\r\n\r\nfunction SearchPage() {\r\n  const [state, setState1] = useState({\r\n    searchString: \"\",\r\n  });\r\n  const setState = (e) => {\r\n    setState1((c) => ({ ...c, ...e }));\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\" onClick={() => setState({ showSearchPage: false })}>\r\n              Close\r\n            </button>\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input type=\"text\" placeholder=\"Search by title or author\" onChange={(e) => setState({ searchString: e.target.value })} />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            <BookSearch str={state.searchString} />\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchPage;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\nReactDOM.render(\n    <Router>\n      <Routes>\n        <Route path=\"/Search\" element={<SearchPage/>}>\n          {/* <SearchPage /> */}\n        </Route>\n        <Route exact path=\"/\" element={<App/>}>\n          {/* <App /> */}\n        </Route>\n      </Routes>\n    </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}